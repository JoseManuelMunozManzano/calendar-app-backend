{"version":3,"sources":["types/types.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","router/PublicRoute.js","router/PrivateRoute.js","hooks/useForm.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initalState","events","activeEvent","initialState","modalOpen","checking","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","localStorage","setItem","location","pathname","search","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.760b28f4.chunk.js","sourcesContent":["export const types = {\n  uiOpenModal: '[ui] Open modal',\n  uiCloseModal: '[ui] Close modal',\n\n  eventSetActive: '[event] Set active',\n  eventLogout: '[event] Logout event',\n\n  eventStartAddNew: '[event] Start add new',\n  eventAddNew: '[event] Add new',\n  eventClearActiveEvent: '[event] Clear active event',\n  eventUpdated: '[event] Event updated',\n  eventDeleted: '[event] Event deleted',\n  eventLoaded: '[event] Events loaded',\n\n  authCheckingFinish: '[auth] Finish checking login state',\n  authStartLogin: '[auth] Start login',\n  authLogin: '[auth] Login',\n  authStartRegister: '[auth] Start register',\n  authStartTokenRenew: '[auth] Start token renew',\n  authLogout: '[auth] Logout',\n};\n","import { types } from '../types/types';\n\n// {\n//   id: '21872897981749',\n//   title: 'Cumpleaños del jefe',\n//   start: moment().toDate(),\n//   end: moment().add(2, 'hours').toDate(),\n//   notes: 'Comprar el pastel',\n//   user: {\n//     _id: '123',\n//     name: 'José Manuel',\n//   },\n// },\n\nconst initalState = {\n  events: [],\n  activeEvent: null, // Objeto con todas las propiedades del evento activo\n};\n\nexport const calendarReducer = (state = initalState, action) => {\n  switch (action.type) {\n    case types.eventSetActive:\n      return {\n        ...state,\n        activeEvent: action.payload,\n      };\n\n    case types.eventAddNew:\n      return {\n        ...state,\n        events: [...state.events, action.payload],\n      };\n\n    case types.eventClearActiveEvent:\n      return {\n        ...state,\n        activeEvent: null,\n      };\n\n    case types.eventUpdated:\n      return {\n        ...state,\n        events: state.events.map(e =>\n          e.id === action.payload.id ? action.payload : e\n        ),\n      };\n\n    case types.eventDeleted:\n      return {\n        ...state,\n        events: state.events.filter(e => e.id !== state.activeEvent.id),\n        activeEvent: null,\n      };\n\n    case types.eventLoaded:\n      return {\n        ...state,\n        events: [...action.payload],\n      };\n\n    case types.eventLogout:\n      return {\n        ...initalState,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { types } from '../types/types';\n\nconst initialState = {\n  modalOpen: false,\n};\n\nexport const uiReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.uiOpenModal:\n      return {\n        ...state,\n        modalOpen: true,\n      };\n\n    case types.uiCloseModal:\n      return {\n        ...state,\n        modalOpen: false,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { types } from '../types/types';\n\nconst initialState = {\n  checking: true,\n  // uid: null,\n  // name: null,\n};\n\nexport const authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.authLogin:\n      return {\n        ...state,\n        ...action.payload,\n        checking: false,\n      };\n\n    case types.authCheckingFinish:\n      return {\n        ...state,\n        checking: false,\n      };\n\n    case types.authLogout:\n      return {\n        checking: false,\n      };\n\n    default:\n      return state;\n  }\n};\n","// Combinación de todos los reducers\nimport { combineReducers } from 'redux';\n\nimport { calendarReducer } from './calendarReducer';\nimport { uiReducer } from './uiReducer';\nimport { authReducer } from './authReducer';\n\nexport const rootReducer = combineReducers({\n  ui: uiReducer,\n  calendar: calendarReducer,\n  auth: authReducer,\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { rootReducer } from '../reducers/rootReducer';\n\n// Para trabajar acciones asíncronas en nuestra aplicación\nconst composeEnhancers =\n  (typeof window !== 'undefined' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\n\nexport const PublicRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      component={props =>\n        isAuthenticated ? <Redirect to=\"/\" /> : <Component {...props} />\n      }\n    />\n  );\n};\n\nPublicRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\n\n// En argumentos ... es el rest\nexport const PrivateRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n  localStorage.setItem(\n    'lastPath',\n    rest.location.pathname + (rest.location.search || '')\n  );\n\n  return (\n    <Route\n      {...rest}\n      component={props =>\n        isAuthenticated ? (\n          // Aquí ... es el spread\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/login\" />\n        )\n      }\n    />\n  );\n};\n\nPrivateRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\n\nexport const useForm = (initialState = {}) => {\n  const [values, setValues] = useState(initialState);\n\n  const reset = () => {\n    setValues(initialState);\n  };\n\n  const handleInputChange = ({ target }) => {\n    setValues({\n      ...values,\n      [target.name]: target.value,\n    });\n  };\n\n  return [values, handleInputChange, reset];\n};\n","const baseUrl = process.env.REACT_APP_API_URL;\n\nconst fetchSinToken = (endpoint, data, method = 'GET') => {\n  const url = `${baseUrl}/${endpoint}`;\n\n  if (method === 'GET') {\n    return fetch(url);\n  } else {\n    return fetch(url, {\n      method,\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    });\n  }\n};\n\nconst fetchConToken = (endpoint, data, method = 'GET') => {\n  const url = `${baseUrl}/${endpoint}`;\n  const token = localStorage.getItem('token') || '';\n\n  if (method === 'GET') {\n    return fetch(url, {\n      method,\n      headers: {\n        'x-token': token,\n      },\n    });\n  } else {\n    return fetch(url, {\n      method,\n      headers: {\n        'Content-type': 'application/json',\n        'x-token': token,\n      },\n      body: JSON.stringify(data),\n    });\n  }\n};\n\nexport { fetchSinToken, fetchConToken };\n","import moment from 'moment';\n\nexport const prepareEvents = (events = []) => {\n  return events.map(e => ({\n    ...e,\n    end: moment(e.end).toDate(),\n    start: moment(e.start).toDate(),\n  }));\n};\n","import Swal from 'sweetalert2';\n\nimport { fetchConToken } from '../helpers/fetch';\nimport { prepareEvents } from '../helpers/prepareEvents';\nimport { types } from '../types/types';\n\nexport const eventStartAddNew = event => {\n  return async (dispatch, getState) => {\n    const { uid, name } = getState().auth;\n\n    try {\n      const resp = await fetchConToken('events', event, 'POST');\n      const body = await resp.json();\n\n      if (body.ok) {\n        event.id = body.evento.id;\n        event.user = {\n          _id: uid,\n          name: name,\n        };\n\n        dispatch(eventAddNew(event));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst eventAddNew = event => ({\n  type: types.eventAddNew,\n  payload: event,\n});\n\nexport const eventSetActive = event => ({\n  type: types.eventSetActive,\n  payload: event,\n});\n\nexport const eventClearActiveEvent = () => ({\n  type: types.eventClearActiveEvent,\n});\n\nexport const eventStartUpdate = event => {\n  return async dispatch => {\n    try {\n      const resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\n      const body = await resp.json();\n\n      if (body.ok) {\n        dispatch(eventUpdated(event));\n      } else {\n        Swal.fire('Error', body.msg, 'error');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst eventUpdated = event => ({\n  type: types.eventUpdated,\n  payload: event,\n});\n\nexport const eventStartDelete = () => {\n  return async (dispatch, getState) => {\n    const { id } = getState().calendar.activeEvent;\n\n    try {\n      const resp = await fetchConToken(`events/${id}`, {}, 'DELETE');\n      const body = await resp.json();\n\n      if (body.ok) {\n        dispatch(eventDeleted());\n      } else {\n        Swal.fire('Error', body.msg, 'error');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst eventDeleted = () => ({\n  type: types.eventDeleted,\n});\n\nexport const eventStartLoading = () => {\n  return async dispatch => {\n    try {\n      const resp = await fetchConToken('events');\n      const body = await resp.json();\n\n      const events = prepareEvents(body.eventos);\n      dispatch(eventLoaded(events));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst eventLoaded = events => ({\n  type: types.eventLoaded,\n  payload: events,\n});\n\nexport const eventLogout = () => ({\n  type: types.eventLogout,\n});\n","import Swal from 'sweetalert2';\nimport { fetchConToken, fetchSinToken } from '../helpers/fetch';\nimport { types } from '../types/types';\nimport { eventLogout } from './events';\n\nexport const startLogin = (email, password) => {\n  return async dispatch => {\n    const resp = await fetchSinToken('auth', { email, password }, 'POST');\n    const body = await resp.json();\n\n    if (body.ok) {\n      localStorage.setItem('token', body.token);\n      localStorage.setItem('token-init-date', new Date().getTime());\n\n      dispatch(\n        login({\n          uid: body.uid,\n          name: body.name,\n        })\n      );\n    } else {\n      Swal.fire('Error', body.msg, 'error');\n    }\n  };\n};\n\nexport const startRegister = (email, password, name) => {\n  return async dispatch => {\n    const resp = await fetchSinToken(\n      'auth/new',\n      { email, password, name },\n      'POST'\n    );\n    const body = await resp.json();\n\n    if (body.ok) {\n      localStorage.setItem('token', body.token);\n      localStorage.setItem('token-init-date', new Date().getTime());\n\n      dispatch(\n        login({\n          uid: body.uid,\n          name: body.name,\n        })\n      );\n    } else {\n      Swal.fire('Error', body.msg, 'error');\n    }\n  };\n};\n\nexport const startChecking = () => {\n  return async dispatch => {\n    const resp = await fetchConToken('auth/renew');\n    const body = await resp.json();\n\n    if (body.ok) {\n      localStorage.setItem('token', body.token);\n      localStorage.setItem('token-init-date', new Date().getTime());\n\n      dispatch(\n        login({\n          uid: body.uid,\n          name: body.name,\n        })\n      );\n    } else {\n      dispatch(checkingFinish());\n    }\n  };\n};\n\nconst checkingFinish = () => ({\n  type: types.authCheckingFinish,\n});\n\nconst login = user => ({\n  type: types.authLogin,\n  payload: user,\n});\n\nexport const startLogout = () => {\n  return dispatch => {\n    // Puede tener efectos secundarios, por lo que no va en el reducer\n    localStorage.clear();\n    dispatch(eventLogout());\n    dispatch(logout());\n  };\n};\n\nconst logout = () => ({ type: types.authLogout });\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\n\nimport { useForm } from '../../hooks/useForm';\nimport { startLogin, startRegister } from '../../actions/auth';\n\nimport './login.css';\n\nexport const LoginScreen = () => {\n  const dispatch = useDispatch();\n  const [formLoginValues, handleLoginInputChange] = useForm({\n    // l para login\n    lEmail: 'jose@hotmail.com',\n    lPassword: '123456',\n  });\n\n  const [formRegisterValues, handleRegisterInputChange] = useForm({\n    // r para register\n    rName: 'Marina',\n    rEmail: 'marina@hotmail.com',\n    rPassword1: '123456',\n    rPassword2: '123456',\n  });\n\n  const { lEmail, lPassword } = formLoginValues;\n  const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\n\n  const handleLogin = e => {\n    e.preventDefault();\n\n    dispatch(startLogin(lEmail, lPassword));\n  };\n\n  const handleRegister = e => {\n    e.preventDefault();\n\n    if (rPassword1 !== rPassword2) {\n      return Swal.fire('Error', 'Las contraseñas debe de ser iguales', 'error');\n    }\n\n    dispatch(startRegister(rEmail, rPassword1, rName));\n  };\n\n  return (\n    <div className=\"container login-container\">\n      <div className=\"row\">\n        <div className=\"col-md-6 login-form-1\">\n          <h3>Ingreso</h3>\n          <form onSubmit={handleLogin}>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Correo\"\n                name=\"lEmail\"\n                value={lEmail}\n                onChange={handleLoginInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Contraseña\"\n                name=\"lPassword\"\n                value={lPassword}\n                onChange={handleLoginInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input type=\"submit\" className=\"btnSubmit\" value=\"Login\" />\n            </div>\n          </form>\n        </div>\n\n        <div className=\"col-md-6 login-form-2\">\n          <h3>Registro</h3>\n          <form onSubmit={handleRegister}>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Nombre\"\n                name=\"rName\"\n                value={rName}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                placeholder=\"Correo\"\n                name=\"rEmail\"\n                value={rEmail}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Contraseña\"\n                name=\"rPassword1\"\n                value={rPassword1}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Repita la contraseña\"\n                name=\"rPassword2\"\n                value={rPassword2}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <input type=\"submit\" className=\"btnSubmit\" value=\"Crear cuenta\" />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { startLogout } from '../../actions/auth';\n\nexport const Navbar = () => {\n  const { name } = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n\n  const handleLogout = () => {\n    dispatch(startLogout());\n  };\n\n  return (\n    <div className=\"navbar navbar-dark bg-dark mb-4\">\n      <span className=\"navbar-brand\">{name}</span>\n\n      <button className=\"btn btn-outline-danger\" onClick={handleLogout}>\n        <i className=\"fas fa-sign-out-alt\"></i>\n        <span> Salir</span>\n      </button>\n    </div>\n  );\n};\n","export const messages = {\n  allDay: 'Todo el día',\n  previous: '<',\n  next: '>',\n  today: 'Hoy',\n  month: 'Mes',\n  week: 'Semana',\n  day: 'Día',\n  agenda: 'Agenda',\n  date: 'Fecha',\n  time: 'Hora',\n  event: 'Evento',\n  noEventsInRange: 'No hay eventos en este rango',\n  showMore: total => `+ Ver más (${total})`,\n};\n","import React from 'react';\n\nexport const CalendarEvent = ({ event }) => {\n  //console.log(event);\n\n  const {\n    title,\n    user: { name },\n  } = event;\n\n  return (\n    <div>\n      <span>{title} </span>\n      <strong>- {name}</strong>\n    </div>\n  );\n};\n","import { types } from '../types/types';\n\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\n\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport moment from 'moment';\nimport Swal from 'sweetalert2';\n\nimport { uiCloseModal } from '../../actions/ui';\nimport {\n  eventStartAddNew,\n  eventClearActiveEvent,\n  eventStartUpdate,\n} from '../../actions/events';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n\nModal.setAppElement('#root');\n\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\nconst nowPlus1 = now.clone().add(1, 'hours');\n\nconst initEvent = {\n  title: '',\n  notes: '',\n  start: now.toDate(),\n  end: nowPlus1.toDate(),\n};\n\nexport const CalendarModal = () => {\n  const { modalOpen } = useSelector(state => state.ui);\n  const { activeEvent } = useSelector(state => state.calendar);\n  const dispatch = useDispatch();\n\n  //const [dateStart, setDateStart] = useState(now.toDate());\n  //const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\n  const [titleValid, setTitleValid] = useState(true);\n\n  const [formValues, setFormValues] = useState(initEvent);\n\n  const { notes, title, start, end } = formValues;\n\n  useEffect(() => {\n    if (activeEvent) {\n      setFormValues(activeEvent);\n    } else {\n      setFormValues(initEvent);\n    }\n  }, [activeEvent, setFormValues]);\n\n  const handleInputChange = ({ target }) => {\n    setFormValues({\n      ...formValues,\n      [target.name]: target.value,\n    });\n  };\n\n  const closeModal = () => {\n    dispatch(uiCloseModal());\n    dispatch(eventClearActiveEvent());\n    //setDateStart(now.toDate());\n    //setDateEnd(nowPlus1.toDate());\n    setFormValues(initEvent);\n  };\n\n  const handleStartDateChange = e => {\n    //setDateStart(e);\n    setFormValues({\n      ...formValues,\n      start: e,\n    });\n  };\n\n  const handleEndDateChange = e => {\n    //setDateEnd(e);\n    setFormValues({\n      ...formValues,\n      end: e,\n    });\n  };\n\n  const handleSubmitForm = e => {\n    e.preventDefault();\n\n    const momentStart = moment(start);\n    const momentEnd = moment(end);\n\n    if (momentStart.isSameOrAfter(momentEnd)) {\n      // Usando SweetAlert2\n      return Swal.fire(\n        'Error',\n        'La fecha fin debe de ser mayor a la fecha de inicio.',\n        'error'\n      );\n    }\n\n    if (title.trim().length < 2) {\n      // Enseñando otra forma de hacerlo, usando Bootstrap (clase is-invalid) y estados\n      return setTitleValid(false);\n    }\n\n    if (activeEvent) {\n      // Actualizar\n      dispatch(eventStartUpdate(formValues));\n    } else {\n      // Hacer la grabación\n      dispatch(eventStartAddNew(formValues));\n    }\n\n    setTitleValid(true);\n    closeModal();\n  };\n\n  return (\n    <div>\n      <Modal\n        isOpen={modalOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        closeTimeoutMS={200}\n        className=\"modal\"\n        overlayClassName=\"modal-fondo\"\n      >\n        <h1> {activeEvent ? 'Editar evento' : 'Nuevo evento'} </h1>\n        <hr />\n        <form className=\"container\" onSubmit={handleSubmitForm}>\n          <div className=\"form-group\">\n            <label>Fecha y hora inicio</label>\n            <DateTimePicker\n              onChange={handleStartDateChange}\n              value={start}\n              className=\"form-control\"\n              // format=\"d/M/yyyy H:mm a\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Fecha y hora fin</label>\n            <DateTimePicker\n              onChange={handleEndDateChange}\n              value={end}\n              className=\"form-control\"\n              minDate={start}\n              // format=\"d/M/yyyy H:mm a\"\n            />\n          </div>\n\n          <hr />\n          <div className=\"form-group\">\n            <label>Titulo y notas</label>\n            <input\n              type=\"text\"\n              className={`form-control ${!titleValid && 'is-invalid'}`}\n              placeholder=\"Título del evento\"\n              name=\"title\"\n              autoComplete=\"off\"\n              value={title}\n              onChange={handleInputChange}\n            />\n            <small id=\"emailHelp\" className=\"form-text text-muted\">\n              Una descripción corta\n            </small>\n          </div>\n\n          <div className=\"form-group\">\n            <textarea\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Notas\"\n              rows=\"5\"\n              name=\"notes\"\n              value={notes}\n              onChange={handleInputChange}\n            ></textarea>\n            <small id=\"emailHelp\" className=\"form-text text-muted\">\n              Información adicional\n            </small>\n          </div>\n\n          <button type=\"submit\" className=\"btn btn-outline-primary btn-block\">\n            <i className=\"far fa-save\"></i>\n            <span> Guardar</span>\n          </button>\n        </form>\n      </Modal>\n    </div>\n  );\n};\n","// Fab -> Floating Action Button\n// Botón flotante para activar el Modal\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { eventClearActiveEvent } from '../../actions/events';\n\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n  const dispatch = useDispatch();\n\n  const handleClickNew = () => {\n    dispatch(eventClearActiveEvent());\n    dispatch(uiOpenModal());\n  };\n\n  return (\n    <button className=\"btn btn-primary fab\" onClick={handleClickNew}>\n      <i className=\"fas fa-plus\"></i>\n    </button>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { eventStartDelete } from '../../actions/events';\n\nexport const DeleteEventFab = () => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(eventStartDelete());\n  };\n\n  return (\n    <button className=\"btn btn-danger fab-danger\" onClick={handleDelete}>\n      <i className=\"fas fa-trash\"></i>\n      <span> Borrar evento </span>\n    </button>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\n\nimport { Navbar } from '../ui/Navbar';\nimport { messages } from '../../helpers/calendar-messages-es';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\nimport { uiOpenModal } from '../../actions/ui';\nimport {\n  eventClearActiveEvent,\n  eventSetActive,\n  eventStartLoading,\n} from '../../actions/events';\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'moment/locale/es';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\n\nmoment.locale('es');\nconst localizer = momentLocalizer(moment);\n\nexport const CalendarScreen = () => {\n  const dispatch = useDispatch();\n  const { events, activeEvent } = useSelector(state => state.calendar);\n  const { uid } = useSelector(state => state.auth);\n\n  const [lastView, setLastView] = useState(\n    localStorage.getItem('lastView') || 'month'\n  );\n\n  useEffect(() => {\n    dispatch(eventStartLoading());\n  }, [dispatch]);\n\n  const onDoubleClick = e => {\n    dispatch(uiOpenModal());\n  };\n\n  const onSelectEvent = e => {\n    dispatch(eventSetActive(e));\n  };\n\n  const onViewChange = e => {\n    setLastView(e);\n    localStorage.setItem('lastView', e);\n  };\n\n  const onSelectSlot = e => {\n    dispatch(eventClearActiveEvent());\n  };\n\n  const eventStyleGetter = (event, start, end, isSelected) => {\n    //console.log(event, start, end, isSelected);\n\n    const style = {\n      backgroundColor: uid === event.user._id ? '#367CF7' : '#465660',\n      borderRadius: '0px',\n      opacity: '0.8',\n      display: 'block',\n      color: 'white',\n    };\n\n    return {\n      style,\n    };\n  };\n\n  return (\n    <div className=\"calendar-screen\">\n      <Navbar />\n\n      <Calendar\n        localizer={localizer}\n        events={events}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        messages={messages}\n        eventPropGetter={eventStyleGetter}\n        onDoubleClickEvent={onDoubleClick}\n        onSelectEvent={onSelectEvent}\n        onView={onViewChange}\n        onSelectSlot={onSelectSlot}\n        selectable={true}\n        view={lastView}\n        components={{\n          event: CalendarEvent,\n        }}\n      />\n\n      <AddNewFab />\n      {activeEvent && <DeleteEventFab />}\n\n      <CalendarModal />\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Redirect, BrowserRouter as Router, Switch } from 'react-router-dom';\n\nimport { PublicRoute } from './PublicRoute';\nimport { PrivateRoute } from './PrivateRoute';\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport { startChecking } from '../actions/auth';\n\nimport '../styles.css';\n\nexport const AppRouter = () => {\n  const dispatch = useDispatch();\n  const { checking, uid } = useSelector(state => state.auth);\n\n  useEffect(() => {\n    dispatch(startChecking());\n  }, [dispatch]);\n\n  // Cuando el checking retorne false ya se seguro que estoy autenticado\n  // Puedo hacer el render\n  if (checking) {\n    return (\n      <div className=\"sk-chase-main\">\n        <div className=\"sk-chase\">\n          <div className=\"sk-chase-dot\"></div>\n          <div className=\"sk-chase-dot\"></div>\n          <div className=\"sk-chase-dot\"></div>\n          <div className=\"sk-chase-dot\"></div>\n          <div className=\"sk-chase-dot\"></div>\n          <div className=\"sk-chase-dot\"></div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <PublicRoute\n            exact\n            path=\"/login\"\n            component={LoginScreen}\n            isAuthenticated={!!uid}\n          />\n\n          <PrivateRoute\n            exact\n            path=\"/\"\n            component={CalendarScreen}\n            isAuthenticated={!!uid}\n          />\n\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store/store';\nimport { AppRouter } from './router/AppRouter';\n\nexport const CalendarApp = () => {\n  // Provider provee la información a todos los hijos\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\nReactDOM.render(<CalendarApp />, document.getElementById('root'));\n"],"sourceRoot":""}